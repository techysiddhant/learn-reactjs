{"ast":null,"code":"import { toast } from \"react-hot-toast\";\nimport { authenticate } from \"./helper\";\n// validate login page username\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  if (values.username) {\n    //check user exist or not\n    const {\n      status\n    } = await authenticate(values.username);\n    if (status !== 200) {\n      errors.exist = toast.error('User does not exist');\n    }\n  }\n  return errors;\n}\n//validate password\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/** validate reset password  */\n\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password not match.....!\");\n  }\n  return errors;\n}\n\n// Validate Register form\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\n\n// validate profile page\nexport async function profileValidation(values) {\n  const errors = emailVerify({}, values);\n  return errors;\n}\n\n//validate email\nfunction emailVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.email) {\n    error.email = toast.error(\"Email is Required....!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email..!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}\n\n//validate password\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required..!!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password....!\");\n  } else if (values.password.length < 5) {\n    errors.password = toast.error(\"Password must be more than 4 character long....!\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character ....!\");\n  }\n  return errors;\n}\n\n//validate username\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required..!!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username....!');\n  }\n  return error;\n}","map":{"version":3,"names":["toast","authenticate","usernameValidate","values","errors","usernameVerify","username","status","exist","error","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","registerValidation","emailVerify","profileValidation","email","includes","test","specialChars","length"],"sources":["E:/React JS/react-login/client/src/helper/validate.js"],"sourcesContent":["import { toast } from \"react-hot-toast\";\r\nimport { authenticate } from \"./helper\";\r\n// validate login page username\r\nexport async function usernameValidate(values) {\r\n    const errors = usernameVerify({}, values);\r\n\r\n    if (values.username) {\r\n        //check user exist or not\r\n        const { status } = await authenticate(values.username);\r\n        if (status !== 200) {\r\n            errors.exist = toast.error('User does not exist');\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}\r\n//validate password\r\nexport async function passwordValidate(values) {\r\n    const errors = passwordVerify({}, values);\r\n    return errors;\r\n}\r\n\r\n/** validate reset password  */\r\n\r\nexport async function resetPasswordValidation(values) {\r\n    const errors = passwordVerify({}, values);\r\n    if (values.password !== values.confirm_pwd) {\r\n        errors.exist = toast.error(\"Password not match.....!\");\r\n    }\r\n    return errors;\r\n}\r\n\r\n// Validate Register form\r\nexport async function registerValidation(values) {\r\n    const errors = usernameVerify({}, values);\r\n    passwordVerify(errors, values);\r\n    emailVerify(errors, values);\r\n    return errors;\r\n}\r\n\r\n// validate profile page\r\nexport async function profileValidation(values) {\r\n    const errors = emailVerify({}, values);\r\n    return errors;\r\n}\r\n\r\n//validate email\r\nfunction emailVerify(error = {}, values) {\r\n    if (!values.email) {\r\n        error.email = toast.error(\"Email is Required....!\");\r\n\r\n    } else if (values.email.includes(\" \")) {\r\n        error.email = toast.error(\"Wrong Email..!\")\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        error.email = toast.error(\"Invalid email address...!\")\r\n    }\r\n    return error;\r\n}\r\n\r\n\r\n//validate password\r\nfunction passwordVerify(errors = {}, values) {\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    if (!values.password) {\r\n        errors.password = toast.error(\"Password Required..!!\");\r\n\r\n    } else if (values.password.includes(\" \")) {\r\n        errors.password = toast.error(\"Wrong Password....!\");\r\n    } else if (values.password.length < 5) {\r\n        errors.password = toast.error(\"Password must be more than 4 character long....!\");\r\n    } else if (!specialChars.test(values.password)) {\r\n        errors.password = toast.error(\"Password must have special character ....!\");\r\n    }\r\n    return errors;\r\n}\r\n\r\n//validate username\r\nfunction usernameVerify(error = {}, values) {\r\n    if (!values.username) {\r\n        error.username = toast.error('Username Required..!!');\r\n    } else if (values.username.includes(\" \")) {\r\n        error.username = toast.error('Invalid Username....!');\r\n    }\r\n    return error;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}